// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacationSystem.Application.Infrastructure.Persistence;

#nullable disable

namespace VacationSystem.Application.Infrastructure.Migrations
{
    [DbContext(typeof(VacationSystemDbContext))]
    [Migration("20250309003004_Version000001")]
    partial class Version000001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VacationSystem.Application.Common.Abstractions.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("Active");

                    b.Property<DateTime>("DateCreatedUtc")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedAt");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedAt");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("Role").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VacationSystem.Application.Domain.Vacation.VacationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Days")
                        .HasColumnType("int")
                        .HasColumnName("Days");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("EndDate");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime")
                        .HasColumnName("RequestDate");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("StartDate");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("VacationRequests", (string)null);
                });

            modelBuilder.Entity("VacationSystem.Application.Domain.Admin.Admin", b =>
                {
                    b.HasBaseType("VacationSystem.Application.Common.Abstractions.User");

                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentId");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Position");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("VacationSystem.Application.Domain.Employee.Employee", b =>
                {
                    b.HasBaseType("VacationSystem.Application.Common.Abstractions.User");

                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DepartmentId");

                    b.Property<DateTime?>("LastVacationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("LastVacationDate");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("StartDate");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("VacationSystem.Application.Common.Abstractions.User", b =>
                {
                    b.OwnsOne("VacationSystem.Application.Domain.Shared.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(255)
                                .HasColumnType("nvarchar(255)")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("VacationSystem.Application.Domain.Shared.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .HasColumnType("nvarchar(2000)")
                                .HasColumnName("Password");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Password")
                        .IsRequired();
                });

            modelBuilder.Entity("VacationSystem.Application.Domain.Vacation.VacationRequest", b =>
                {
                    b.HasOne("VacationSystem.Application.Domain.Admin.Admin", "Admin")
                        .WithMany("VacationRequests")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VacationSystem.Application.Domain.Employee.Employee", "Employee")
                        .WithMany("VacationRequests")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("VacationSystem.Application.Domain.Admin.Admin", b =>
                {
                    b.OwnsOne("VacationSystem.Application.Domain.Shared.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("AdminId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Firstname")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("Lastname")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LastName");

                            b1.HasKey("AdminId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("AdminId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("VacationSystem.Application.Domain.Employee.Employee", b =>
                {
                    b.OwnsOne("VacationSystem.Application.Domain.Shared.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("EmployeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Firstname")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("Lastname")
                                .IsRequired()
                                .ValueGeneratedOnUpdateSometimes()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("LastName");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("VacationSystem.Application.Domain.Admin.Admin", b =>
                {
                    b.Navigation("VacationRequests");
                });

            modelBuilder.Entity("VacationSystem.Application.Domain.Employee.Employee", b =>
                {
                    b.Navigation("VacationRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
